import "oaidl.idl";
import "ocidl.idl";

[
    uuid(682E7C31-6CE3-4FB3-9883-479ED34CB1B9),
    version(1.0),
]
library FlashProxyLib
{
    importlib("stdole2.tlb");
    interface IThereEdgeShockwaveFlash;
    dispinterface IThereEdgeShockwaveFlashEvents;

    [
        odl,
        uuid(6B3DDCCB-B754-4D73-9E49-65B4AAD1EEAF),
        helpstring("Flash Proxy"),
        dual,
        oleautomation,
        hidden
    ]
    interface IThereEdgeShockwaveFlash : IDispatch {
        [id(0xfffffdf3), propget]
        HRESULT ReadyState([out, retval] long *pVal);
        [id(0x0000007c), propget]
        HRESULT TotalFrames([out, retval] long *pVal);
        [id(0x0000007d), propget]
        HRESULT Playing([out, retval] VARIANT_BOOL *pVal);
        [id(0x0000007d), propput]
        HRESULT Playing([in] VARIANT_BOOL pVal);
        [id(0x00000069), propget]
        HRESULT Quality([out, retval] int *pVal);
        [id(0x00000069), propput]
        HRESULT Quality([in] int pVal);
        [id(0x00000078), propget]
        HRESULT ScaleMode([out, retval] int *pVal);
        [id(0x00000078), propput]
        HRESULT ScaleMode([in] int pVal);
        [id(0x00000079), propget]
        HRESULT AlignMode([out, retval] int *pVal);
        [id(0x00000079), propput]
        HRESULT AlignMode([in] int pVal);
        [id(0x0000007b), propget]
        HRESULT BackgroundColor([out, retval] long *pVal);
        [id(0x0000007b), propput]
        HRESULT BackgroundColor([in] long pVal);
        [id(0x0000006a), propget]
        HRESULT Loop([out, retval] VARIANT_BOOL *pVal);
        [id(0x0000006a), propput]
        HRESULT Loop([in] VARIANT_BOOL pVal);
        [id(0x00000066), propget]
        HRESULT Movie([out, retval] BSTR *pVal);
        [id(0x00000066), propput]
        HRESULT Movie([in] BSTR pVal);
        [id(0x0000006b), propget]
        HRESULT FrameNum([out, retval] long *pVal);
        [id(0x0000006b), propput]
        HRESULT FrameNum([in] long pVal);
        [id(0x0000006d)]
        HRESULT SetZoomRect([in] long left, [in] long top, [in] long right, [in] long bottom);
        [id(0x00000076)]
        HRESULT Zoom([in] int factor);
        [id(0x00000077)]
        HRESULT Pan([in] long x, [in] long y, [in] int mode);
        [id(0x00000070)]
        HRESULT Play();
        [id(0x00000071)]
        HRESULT Stop();
        [id(0x00000072)]
        HRESULT Back();
        [id(0x00000073)]
        HRESULT Forward();
        [id(0x00000074)]
        HRESULT Rewind();
        [id(0x0000007e)]
        HRESULT StopPlay();
        [id(0x0000007f)]
        HRESULT GotoFrame([in] long FrameNum);
        [id(0x00000080)]
        HRESULT CurrentFrame([out, retval] long *FrameNum);
        [id(0x00000081)]
        HRESULT IsPlaying([out, retval] VARIANT_BOOL *Playing);
        [id(0x00000082)]
        HRESULT PercentLoaded([out, retval] long *percent);
        [id(0x00000083)]
        HRESULT FrameLoaded([in] long FrameNum, [out, retval] VARIANT_BOOL *loaded);
        [id(0x00000084)]
        HRESULT FlashVersion([out, retval] long *version);
        [id(0x00000085), propget]
        HRESULT WMode([out, retval] BSTR *pVal);
        [id(0x00000085), propput]
        HRESULT WMode([in] BSTR pVal);
        [id(0x00000086), propget]
        HRESULT SAlign([out, retval] BSTR *pVal);
        [id(0x00000086), propput]
        HRESULT SAlign([in] BSTR pVal);
        [id(0x00000087), propget]
        HRESULT Menu([out, retval] VARIANT_BOOL *pVal);
        [id(0x00000087), propput]
        HRESULT Menu([in] VARIANT_BOOL pVal);
        [id(0x00000088), propget]
        HRESULT Base([out, retval] BSTR *pVal);
        [id(0x00000088), propput]
        HRESULT Base([in] BSTR pVal);
        [id(0x00000089), propget]
        HRESULT Scale([out, retval] BSTR *pVal);
        [id(0x00000089), propput]
        HRESULT Scale([in] BSTR pVal);
        [id(0x0000008a), propget]
        HRESULT DeviceFont([out, retval] VARIANT_BOOL *pVal);
        [id(0x0000008a), propput]
        HRESULT DeviceFont([in] VARIANT_BOOL pVal);
        [id(0x0000008b), propget]
        HRESULT EmbedMovie([out, retval] VARIANT_BOOL *pVal);
        [id(0x0000008b), propput]
        HRESULT EmbedMovie([in] VARIANT_BOOL pVal);
        [id(0x0000008c), propget]
        HRESULT BGColor([out, retval] BSTR *pVal);
        [id(0x0000008c), propput]
        HRESULT BGColor([in] BSTR pVal);
        [id(0x0000008d), propget]
        HRESULT Quality2([out, retval] BSTR *pVal);
        [id(0x0000008d), propput]
        HRESULT Quality2([in] BSTR pVal);
        [id(0x0000008e)]
        HRESULT LoadMovie([in] int layer, [in] BSTR url);
        [id(0x0000008f)]
        HRESULT TGotoFrame([in] BSTR target, [in] long FrameNum);
        [id(0x00000090)]
        HRESULT TGotoLabel([in] BSTR target, [in] BSTR label);
        [id(0x00000091)]
        HRESULT TCurrentFrame([in] BSTR target, [out, retval] long *FrameNum);
        [id(0x00000092)]
        HRESULT TCurrentLabel([in] BSTR target, [out, retval] BSTR *pVal);
        [id(0x00000093)]
        HRESULT TPlay([in] BSTR target);
        [id(0x00000094)]
        HRESULT TStopPlay([in] BSTR target);
        [id(0x00000097)]
        HRESULT SetVariable([in] BSTR name, [in] BSTR value);
        [id(0x00000098)]
        HRESULT GetVariable([in] BSTR name, [out, retval] BSTR *pVal);
        [id(0x00000099)]
        HRESULT TSetProperty([in] BSTR target, [in] int property, [in] BSTR value);
        [id(0x0000009a)]
        HRESULT TGetProperty([in] BSTR target, [in] int property, [out, retval] BSTR *pVal);
        [id(0x0000009b)]
        HRESULT TCallFrame([in] BSTR target, [in] int FrameNum);
        [id(0x0000009c)]
        HRESULT TCallLabel([in] BSTR target, [in] BSTR label);
        [id(0x0000009d)]
        HRESULT TSetPropertyNum([in] BSTR target, [in] int property, [in] double value);
        [id(0x0000009e)]
        HRESULT TGetPropertyNum([in] BSTR target, [in] int property, [out, retval] double *pVal);
        [id(0x000000ac)]
        HRESULT TGetPropertyAsNumber([in] BSTR target, [in] int property, [out, retval] double *pVal);
        [id(0x0000009f), propget]
        HRESULT SWRemote([out, retval] BSTR *pVal);
        [id(0x0000009f), propput]
        HRESULT SWRemote([in] BSTR pVal);
        [id(0x000000aa), propget]
        HRESULT FlashVars([out, retval] BSTR *pVal);
        [id(0x000000aa), propput]
        HRESULT FlashVars([in] BSTR pVal);
        [id(0x000000ab), propget]
        HRESULT AllowScriptAccess([out, retval] BSTR *pVal);
        [id(0x000000ab), propput]
        HRESULT AllowScriptAccess([in] BSTR pVal);
        [id(0x000000be), propget]
        HRESULT MovieData([out, retval] BSTR *pVal);
        [id(0x000000be), propput]
        HRESULT MovieData([in] BSTR pVal);
        [id(0x000000bf), propget]
        HRESULT InlineData([out, retval] IUnknown **ppIUnknown);
        [id(0x000000bf), propput]
        HRESULT InlineData([in] IUnknown *ppIUnknown);
        [id(0x000000c0), propget]
        HRESULT SeamlessTabbing([out, retval] VARIANT_BOOL *pVal);
        [id(0x000000c0), propput]
        HRESULT SeamlessTabbing([in] VARIANT_BOOL pVal);
        [id(0x000000c1)]
        HRESULT EnforceLocalSecurity();
        [id(0x000000c2), propget]
        HRESULT Profile([out, retval] VARIANT_BOOL *pVal);
        [id(0x000000c2), propput]
        HRESULT Profile([in] VARIANT_BOOL pVal);
        [id(0x000000c3), propget]
        HRESULT ProfileAddress([out, retval] BSTR *pVal);
        [id(0x000000c3), propput]
        HRESULT ProfileAddress([in] BSTR pVal);
        [id(0x000000c4), propget]
        HRESULT ProfilePort([out, retval] long *pVal);
        [id(0x000000c4), propput]
        HRESULT ProfilePort([in] long pVal);
        [id(0x000000c6)]
        HRESULT CallFunction([in] BSTR request, [out, retval] BSTR *response);
        [id(0x000000c7)]
        HRESULT SetReturnValue([in] BSTR returnValue);
        [id(0x000000c8)]
        HRESULT DisableLocalSecurity();
        [id(0x000000c9), propget]
        HRESULT AllowNetworking([out, retval] BSTR *pVal);
        [id(0x000000c9), propput]
        HRESULT AllowNetworking([in] BSTR pVal);
        [id(0x000000ca), propget]
        HRESULT AllowFullScreen([out, retval] BSTR *pVal);
        [id(0x000000ca), propput]
        HRESULT AllowFullScreen([in] BSTR pVal);
        [id(0x000001f5), propget]
        HRESULT AllowFullScreenInteractive([out, retval] BSTR *pVal);
        [id(0x000001f5), propput]
        HRESULT AllowFullScreenInteractive([in] BSTR pVal);
        [id(0x000001f6), propget]
        HRESULT IsDependent([out, retval] VARIANT_BOOL *pVal);
        [id(0x000001f6), propput]
        HRESULT IsDependent([in] VARIANT_BOOL pVal);
        [id(0x000001f7), propget]
        HRESULT BrowserZoom([out, retval] BSTR *pVal);
        [id(0x000001f7), propput]
        HRESULT BrowserZoom([in] BSTR pVal);
    }

    [
        uuid(543E9E91-C412-43DD-A12A-3F5AA34758D1),
        helpstring("Event interface for Flash Proxy"),
        hidden
    ]
    dispinterface IThereEdgeShockwaveFlashEvents {
        properties:
        methods:
            [id(0xfffffd9f)]
            void OnReadyStateChange(long newState);
            [id(0x000007a6)]
            void OnProgress(long percentDone);
            [id(0x00000096)]
            void FSCommand([in] BSTR command, [in] BSTR args);
            [id(0x000000c5)]
            void FlashCall([in] BSTR request);
    }

    [
        uuid(71E05279-CB7A-496A-8EE9-D700955CA40C),
        helpstring("There Edge Flash Proxy")
    ]
    coclass ThereEdgeShockwaveFlash {
        [default] interface IThereEdgeShockwaveFlash;
        [default, source] dispinterface IThereEdgeShockwaveFlashEvents;
    }
};